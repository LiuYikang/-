---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: flannel-eth1
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: flannel-eth1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flannel-eth1
subjects:
- kind: ServiceAccount
  name: flannel-eth1
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel-eth1
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-flannel-eth1-cfg
  namespace: kube-system
  labels:
    tier: node
    app: flannel
data:
  #cni-conf.json: |
  #  {
  #    "name": "cbr1",
  #    "plugins": [
  #      {
  #        "type": "flannel",
  #        "delegate": {
  #          "bridge": "cni1",
  #          "hairpinMode": true,
  #          "isDefaultGateway": true
  #        }
  #      },
  #      {
  #        "type": "portmap",
  #        "capabilities": {
  #          "portMappings": true
  #        }
  #      }
  #    ]
  #  }
  net-conf.json: |
    {
      "Network": "172.112.0.0/16",
      "Backend": {
        "Type": "host-gw"
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-flannel-eth1-ds
  namespace: kube-system
  labels:
    tier: node
    app: flannel
spec:
  template:
    metadata:
      labels:
        tier: node
        app: flannel
    spec:
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: flannel-eth1
      # initContainers:
      # - name: install-cni
      #   image: quay.io/coreos/flannel:v0.10.0-amd64
      #   command:
      #   - cp
      #   args:
      #   - -f
      #   - /etc/kube-flannel/cni-conf.json
      #   - /etc/cni/net.d/10-flannel.conflist
      #   volumeMounts:
      #   - name: cni
      #     mountPath: /etc/cni/net.d
      #   - name: flannel-cfg
      #     mountPath: /etc/kube-flannel/
      containers:
      - name: kube-flannel
        image: quay.io/coreos/flannel:v0.10.0-amd64
        command:
        - /opt/bin/flanneld
        args:
        - --subnet-file=/run/flannel/network/subnet2.env
        - --etcd-prefix=/k8s/network2
        - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
        - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
        - --etcd-endpoints=https://127.0.0.1:2379
        - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
        - --ip-masq
        - --iface=eth1
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: run
          mountPath: /run
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
        - name: etcd
          mountPath: /etc/kubernetes
      volumes:
        - name: run
          hostPath:
            path: /run
        #- name: cni
        #  hostPath:
        #    path: /etc/cni/net.d
        - name: flannel-cfg
          configMap:
            name: kube-flannel-eth1-cfg
        - name: etcd
          hostPath:
            path: /etc/kubernetes
